{"version":3,"sources":["Home.tsx","topbar.tsx","sorts/BubbleSort.tsx","sorts/CocktailSort.tsx","sorts/InsertionSort.tsx","sorts/MergeSort.tsx","sorts/QuickSort.tsx","sorts/SelectionSort.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","id","Topbar","values","isAnimationStarted","setArraySize","setIsAnimationStarted","className","htmlFor","onInput","e","speed","parseInt","target","value","type","min","max","defaultValue","style","marginRight","disabled","title","onClick","array","arraySize","window","innerWidth","prompt","alert","BubbleSort","canvas","useRef","useState","Math","floor","mounted","useEffect","current","canvasElement","ctx","getContext","scrollIntoView","behavior","dpr","devicePixelRatio","height","innerHeight","width","clearRect","i","j","widthFactor","itemWidth","push","round","random","fillStyle","fillRect","font","fillText","toFixed","setTimeout","sort","t","k","strokeRect","clearTimeout","ref","CocktailSort","start","end","paint","Promise","res","rej","fp","a","swapped","sp","is","InsertionSort","temp","length","MergeSort","merge","l","m","r","n1","n2","L","R","undefined","then","QuickSort","delay","swap","partition","left","right","pivot","qs","index","SelectionSort","tmp","App","orientationChange","location","reload","navigator","maxTouchPoints","addEventListener","removeEventListener","exact","to","activeClassName","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a81258b.chunk.js","sourcesContent":["import './home.css'\nconst Home = () => {\n\n    return (\n        <div id=\"titlecontainer\">\n            <h1 id=\"title\">Sorting Visualiser</h1>\n        </div>\n    );\n}\n\nexport default Home;\n","import React, { FC } from 'react'\nimport { Refs } from './sorts/refs'\n\ninterface Props {\n  setIsAnimationStarted: (state: boolean) => void,\n  setArraySize: (size: number) => void\n  isAnimationStarted: boolean,\n  values: Refs\n}\n\nconst Topbar: FC<Props> = ({\n  values,\n  isAnimationStarted,\n  setArraySize,\n  setIsAnimationStarted\n}) => {\n  return (\n    <div className=\"topbar\">\n      <div>\n        <label htmlFor=\"speed\">{'speed: '}</label>\n        <input\n          id=\"speed\"\n          onInput={(e: React.FormEvent<HTMLInputElement>) => {\n            values.speed = (100 - parseInt((e.target as HTMLInputElement).value));\n          }}\n          type=\"range\"\n          min=\"0\"\n          max=\"100\"\n          defaultValue={100 - values.speed}\n        />\n      </div>\n      <button\n        className=\"btn\"\n        style={{\n          marginRight: '5px'\n        }}\n        disabled={isAnimationStarted}\n        title={isAnimationStarted ? 'disabled' : ''}\n        onClick={() => {\n          values.array = [];\n          setIsAnimationStarted(true);\n        }}>\n        Start Animation\n        </button>\n      <button\n        className=\"btn\"\n        disabled={isAnimationStarted}\n        title={isAnimationStarted ? 'disabled' : ''}\n        onClick={() => {\n          let arraySize;\n          if (window.innerWidth > 800) {\n\n            arraySize = parseInt(prompt(\"Enter value Between 20 and 200\")!);\n\n            if (arraySize <= 200 && arraySize > 19) {\n              setArraySize(arraySize);\n            }\n\n            else alert(\"Enter Valid Size. Enter value Between 20 and 200\");\n\n          } else {\n\n            arraySize = parseInt(prompt(\"Enter value Between 10 and 80\")!);\n\n            if (arraySize <= 80 && arraySize > 9) {\n              setArraySize(arraySize);\n            }\n\n            else alert(\"Enter Valid Size. Enter value Between 10 and 80\");\n\n          }\n        }}\n      >change array size</button>\n    </div>\n  )\n}\n\nexport default Topbar;","import { useEffect, useRef, useState } from 'react';\nimport { Refs } from './refs';\nimport Topbar from '../topbar';\n\nconst BubbleSort = () => {\n  let canvas = useRef<HTMLCanvasElement>(null);\n  let [arraySize, setArraySize] = useState(() => Math.floor(window.innerWidth / 20));\n  let [isAnimationStarted, setIsAnimationStarted] = useState(false);\n  let values = useRef<Refs>({\n    speed: 100,\n    id: null,\n    array: [],\n    mounted: true\n  });\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      values.current.mounted = false;\n    }\n  }, []);\n\n  useEffect(() => {\n    values.current.array = [];\n  }, [arraySize]);\n\n  useEffect(() => {\n\n    let canvasElement = canvas.current!;\n    let ctx = canvasElement.getContext(\"2d\")!;\n    let label = 9;\n    canvasElement.scrollIntoView({\n      behavior: 'smooth'\n    })\n    let dpr = devicePixelRatio > 1.5 ? devicePixelRatio : 2;\n\n    canvasElement.height = window.innerHeight * 0.8 * dpr;\n    canvasElement.width = window.innerWidth * dpr;\n    ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    let i = 0;\n    let j = 0;\n    let widthFactor = canvasElement.width / arraySize;\n    let itemWidth = (widthFactor * 3) / 4;\n\n\n    for (let i = 0; i < arraySize; i++) {\n      values.current.array.push(Math.round(Math.random() * (canvasElement.height - 70) + 30));\n\n      ctx.fillStyle = \"green\";\n      ctx.fillRect(i * widthFactor + 5, canvasElement.height - values.current.array[i], itemWidth, values.current.array[i]);\n\n      if (itemWidth > label) {\n        ctx.fillStyle = \"red\";\n        ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n        ctx.fillText((values.current.array[i] / dpr).toFixed(0), i * widthFactor + 5, canvasElement.height - values.current.array[i] - 2);\n      }\n    }\n\n    if (!isAnimationStarted) return;\n\n    function sort() {\n\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n      if (values.current.array[j] > values.current.array[j + 1]) {\n        let t = values.current.array[j];\n        values.current.array[j] = values.current.array[j + 1];\n        values.current.array[j + 1] = t;\n      }\n\n      j++;\n\n      if (j > arraySize - i - 1) {\n        i++;\n        j = 0;\n      }\n\n      for (let k = 0; k < arraySize; k++) {\n        ctx.strokeRect(k * widthFactor + 5, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n\n        if (itemWidth > label) {\n          ctx.fillStyle = \"red\";\n          ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n          ctx.fillText((values.current.array[k] / dpr).toFixed(0), k * widthFactor + 5, canvasElement.height - values.current.array[k] - 2);\n        }\n\n        if (k === j) {\n          ctx.fillStyle = \"blue\";\n          ctx.fillRect(k * widthFactor + 5, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n        }\n        if (k === j + 1) {\n          ctx.fillStyle = \"orange\";\n          ctx.fillRect(k * widthFactor + 5, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n        }\n        if (k >= arraySize - i) {\n          ctx.fillStyle = \"green\";\n          ctx.fillRect(k * widthFactor + 5, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n        }\n      }\n\n      values.current.id = setTimeout(sort, values.current.speed);\n\n      if (i >= arraySize) {\n        clearTimeout(values.current.id);\n        if (values.current.mounted)\n          setIsAnimationStarted(false);\n      }\n    }\n\n    values.current.id = setTimeout(sort, values.current.speed);\n\n  }, [arraySize, isAnimationStarted]);\n\n  return (\n    <>\n      <Topbar\n        isAnimationStarted={isAnimationStarted}\n        values={values.current}\n        setArraySize={setArraySize}\n        setIsAnimationStarted={setIsAnimationStarted}\n      />\n      <div>\n        <canvas ref={canvas} className=\"canvas\"></canvas>\n      </div>\n    </>\n  );\n}\n\nexport default BubbleSort;","import { useEffect, useRef, useState } from 'react';\nimport { Refs } from './refs';\nimport Topbar from '../topbar';\n\n\nconst CocktailSort = () => {\n\n    let canvas = useRef<HTMLCanvasElement>(null);\n    let [arraySize, setArraySize] = useState(() => Math.floor(window.innerWidth / 20));\n    let [isAnimationStarted, setIsAnimationStarted] = useState(false);\n    let values = useRef<Refs>({\n        speed: 100,\n        id: null,\n        array: [],\n        mounted: true\n    });\n\n    useEffect(() => {\n        return () => {\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            values.current.mounted = false;\n        }\n    }, []);\n\n    useEffect(() => {\n        values.current.array = [];\n    }, [arraySize]);\n\n    useEffect(() => {\n\n        let canvasElement = canvas.current!;\n        let ctx = canvasElement.getContext(\"2d\")!;\n        let label = 9;\n        canvasElement.scrollIntoView({\n            behavior: 'smooth'\n        })\n        let dpr = devicePixelRatio > 1.5 ? devicePixelRatio : 2;\n\n        canvasElement.height = window.innerHeight * 0.8 * dpr;\n        canvasElement.width = window.innerWidth * dpr;\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n        let i = 1;\n        let widthFactor = canvasElement.width / arraySize;\n        let itemWidth = (widthFactor * 3) / 4;\n\n\n        for (let i = 0; i < arraySize; i++) {\n            values.current.array.push(Math.round(Math.random() * (canvasElement.height - 70) + 30));\n\n            ctx.fillStyle = \"green\";\n            ctx.fillRect(i * widthFactor + 5, canvasElement.height - values.current.array[i], itemWidth, values.current.array[i]);\n\n            if (itemWidth > label) {\n                ctx.fillStyle = \"red\";\n                ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n                ctx.fillText((values.current.array[i] / dpr).toFixed(0), i * widthFactor + 5, canvasElement.height - values.current.array[i] - 2);\n            }\n        }\n\n        if (!isAnimationStarted) return;\n\n        let start = 0;\n        let end = arraySize - 1;\n\n\n        function paint(i: number) {\n            return new Promise((res, rej) => {\n                ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n                for (let k = 0; k < arraySize; k++) {\n                    if (itemWidth > label) {\n                        ctx.fillStyle = \"red\";\n                        ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n                        ctx.fillText(values.current.array[k].toFixed(0), k * widthFactor + 2, canvasElement.height - values.current.array[k] - 2);\n                    }\n\n                    ctx.strokeRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n\n                    if (k === i) {\n                        ctx.fillStyle = \"blue\";\n                        ctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n                    }\n                    if (k < start || k > end) {\n                        ctx.fillStyle = \"green\";\n                        ctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n                    }\n                }\n                if (i === arraySize) {\n                    ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n                    for (let k = 0; k < arraySize; k++) {\n                        if (itemWidth > label) {\n                            ctx.fillStyle = \"red\";\n                            ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n                            ctx.fillText((values.current.array[k] / dpr).toFixed(0), k * widthFactor + 2, canvasElement.height - values.current.array[k] - 2);\n                        }\n\n                        ctx.strokeRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n\n                        ctx.fillStyle = \"green\";\n                        ctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n                    }\n                }\n                setTimeout(res, values.current.speed);\n            });\n        }\n\n        async function fp(j: number) {\n            let swapped = false;\n            if (values.current.array[j] > values.current.array[j + 1]) {\n                let t = values.current.array[j];\n                values.current.array[j] = values.current.array[j + 1];\n                values.current.array[j + 1] = t;\n                swapped = true;\n            }\n\n            await paint(j + 1);\n            return swapped;\n        }\n\n        async function sp(j: number) {\n            let swapped = false;\n            if (values.current.array[j] > values.current.array[j + 1]) {\n                let t = values.current.array[j];\n                values.current.array[j] = values.current.array[j + 1];\n                values.current.array[j + 1] = t;\n                swapped = true;\n            }\n            await paint(j);\n            return swapped;\n        }\n\n\n        async function sort() {\n\n            i = start;\n            let swapped = false;\n            while (i < end) {\n                let is = await fp(i);\n                swapped = swapped || is;\n                i++;\n            }\n            if (!swapped) {\n                if (values.current.mounted)\n                    setIsAnimationStarted(false);\n                await paint(arraySize);\n                return;\n            }\n            end--;\n            i = end - 1;\n            while (i >= start) {\n                await sp(i);\n                i--;\n            }\n            start++;\n            await sort();\n\n        }\n\n        values.current.id = setTimeout(sort, values.current.speed);\n\n    }, [arraySize, isAnimationStarted]);\n\n    return (\n        <>\n            <Topbar\n                isAnimationStarted={isAnimationStarted}\n                values={values.current}\n                setArraySize={setArraySize}\n                setIsAnimationStarted={setIsAnimationStarted}\n            />\n            <div>\n                <canvas ref={canvas} className=\"canvas\"></canvas>\n            </div>\n        </>\n    );\n\n}\n\nexport default CocktailSort;","import { useEffect, useRef, useState } from 'react';\nimport { Refs } from './refs';\nimport Topbar from '../topbar';\n\nconst InsertionSort = () => {\n\n  let canvas = useRef<HTMLCanvasElement>(null);\n  let [arraySize, setArraySize] = useState(() => Math.floor(window.innerWidth / 20));\n  let [isAnimationStarted, setIsAnimationStarted] = useState(false);\n  let values = useRef<Refs>({\n    speed: 100,\n    id: null,\n    array: [],\n    mounted: true\n  });\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      values.current.mounted = false;\n    }\n  }, []);\n\n  useEffect(() => {\n    values.current.array = [];\n  }, [arraySize]);\n\n  useEffect(() => {\n\n    let canvasElement = canvas.current!;\n    let ctx = canvasElement.getContext(\"2d\")!;\n    let label = 9;\n    canvasElement.scrollIntoView({\n      behavior: 'smooth'\n    })\n    let dpr = devicePixelRatio > 1.5 ? devicePixelRatio : 2;\n\n    canvasElement.height = window.innerHeight * 0.8 * dpr;\n    canvasElement.width = window.innerWidth * dpr;\n    ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    let i = 1;\n    let j = i - 1;\n    let widthFactor = canvasElement.width / arraySize;\n    let itemWidth = (widthFactor * 3) / 4;\n\n\n    for (let i = 0; i < arraySize; i++) {\n      values.current.array.push(Math.round(Math.random() * (canvasElement.height - 70) + 30));\n\n      ctx.fillStyle = \"green\";\n      ctx.fillRect(i * widthFactor + 5, canvasElement.height - values.current.array[i], itemWidth, values.current.array[i]);\n\n      if (itemWidth > label) {\n        ctx.fillStyle = \"red\";\n        ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n        ctx.fillText((values.current.array[i] / dpr).toFixed(0), i * widthFactor + 5, canvasElement.height - values.current.array[i] - 2);\n      }\n    }\n\n    if (!isAnimationStarted) return;\n\n    let temp = values.current.array[i];\n\n    function sort() {\n\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n      if (values.current.array[j] > temp && j >= 0) {\n        values.current.array[j + 1] = values.current.array[j];\n        j--;\n      } else {\n        values.current.array[j + 1] = temp;\n        if (i < values.current.array.length) {\n          i++;\n          j = i - 1;\n          temp = values.current.array[i];\n        }\n      }\n\n      for (let k = 0; k < arraySize; k++) {\n        ctx.strokeRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n\n        if (itemWidth > label) {\n          ctx.fillStyle = \"red\";\n          ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n          ctx.fillText((values.current.array[k] / dpr).toFixed(0), k * widthFactor + 2, canvasElement.height - values.current.array[k] - 2);\n        }\n        if (k < i) {\n          ctx.fillStyle = \"green\";\n          ctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n        }\n        if (k === j + 1) {\n          ctx.fillStyle = \"blue\";\n          ctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n        }\n      }\n\n      values.current.id = setTimeout(sort, values.current.speed);\n\n      if (i >= arraySize) {\n        clearTimeout(values.current.id);\n        if (values.current.mounted)\n          setIsAnimationStarted(false);\n      }\n    }\n\n    values.current.id = setTimeout(sort, values.current.speed);\n\n  }, [arraySize, isAnimationStarted]);\n\n  return (\n    <>\n      <Topbar\n        isAnimationStarted={isAnimationStarted}\n        values={values.current}\n        setArraySize={setArraySize}\n        setIsAnimationStarted={setIsAnimationStarted}\n      />\n      <div>\n        <canvas ref={canvas} className=\"canvas\"></canvas>\n      </div>\n    </>\n  );\n\n}\n\nexport default InsertionSort;","import { useEffect, useRef, useState } from 'react';\nimport { Refs } from './refs';\nimport Topbar from '../topbar';\n\nconst MergeSort = () => {\n\n  let canvas = useRef<HTMLCanvasElement>(null);\n  let [arraySize, setArraySize] = useState(() => Math.floor(window.innerWidth / 20));\n  let [isAnimationStarted, setIsAnimationStarted] = useState(false);\n  let values = useRef<Refs>({\n    speed: 100,\n    id: null,\n    array: [],\n    mounted: true\n  });\n\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      values.current.mounted = false;\n    }\n  }, []);\n\n\n  useEffect(() => {\n    values.current.array = [];\n  }, [arraySize]);\n\n  useEffect(() => {\n\n    let canvasElement = canvas.current!;\n    let ctx = canvasElement.getContext(\"2d\")!;\n    let label = 9;\n    canvasElement.scrollIntoView({\n      behavior: 'smooth'\n    })\n    let dpr = devicePixelRatio > 1.5 ? devicePixelRatio : 2;\n\n    canvasElement.height = window.innerHeight * 0.8 * dpr;\n    canvasElement.width = window.innerWidth * dpr;\n    ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    let widthFactor = canvasElement.width / arraySize;\n    let itemWidth = (widthFactor * 3) / 4;\n\n\n    for (let i = 0; i < arraySize; i++) {\n      values.current.array.push(Math.round(Math.random() * (canvasElement.height - 70) + 30));\n\n      ctx.fillStyle = \"green\";\n      ctx.fillRect(i * widthFactor + 5, canvasElement.height - values.current.array[i], itemWidth, values.current.array[i]);\n\n      if (itemWidth > label) {\n        ctx.fillStyle = \"red\";\n        ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n        ctx.fillText((values.current.array[i] / dpr).toFixed(0), i * widthFactor + 5, canvasElement.height - values.current.array[i] - 2);\n      }\n    }\n\n\n    if (!isAnimationStarted) return;\n    function paint(t: number | undefined) {\n      return new Promise((res, rej) => {\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n        for (let k = 0; k < arraySize; k++) {\n          if (itemWidth > label) {\n            ctx.fillStyle = \"red\";\n            ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n            ctx.fillText((values.current.array[k] / dpr).toFixed(0), k * widthFactor + 2, canvasElement.height - values.current.array[k] - 2);\n          }\n\n          ctx.fillStyle = \"green\";\n          if (t === k) ctx.fillStyle = \"blue\";\n          ctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n        }\n        setTimeout(res, values.current.speed);\n      });\n    }\n\n    async function merge(l: number, m: number, r: number) {\n      let n1 = m - l + 1;\n      let n2 = r - m;\n\n      let L = [];\n      let R = [];\n\n      for (let i = 0; i < n1; ++i) L[i] = values.current.array[l + i];\n      for (let j = 0; j < n2; ++j) R[j] = values.current.array[m + 1 + j];\n\n      let i = 0,\n        j = 0;\n\n      let k = l;\n      while (i < n1 && j < n2) {\n        if (L[i] <= R[j]) {\n          values.current.array[k] = L[i];\n          await paint(k);\n          i++;\n        } else {\n          values.current.array[k] = R[j];\n          await paint(k);\n          j++;\n        }\n        k++;\n      }\n\n      while (i < n1) {\n        values.current.array[k] = L[i];\n        await paint(k);\n        i++;\n        k++;\n      }\n\n      while (j < n2) {\n        values.current.array[k] = R[j];\n        await paint(undefined);\n        j++;\n        k++;\n      }\n    }\n\n    async function sort(l: number, r: number) {\n      if (l < r) {\n        let m = Math.floor((l + r) / 2);\n\n        await sort(l, m);\n        await sort(m + 1, r);\n\n        await merge(l, m, r);\n      }\n    }\n\n    sort(0, values.current.array.length - 1).then(() => {\n      if (values.current.mounted)\n        setIsAnimationStarted(false);\n    })\n\n  }, [arraySize, isAnimationStarted]);\n\n\n\n  return (\n    <>\n      <Topbar\n        isAnimationStarted={isAnimationStarted}\n        values={values.current}\n        setArraySize={setArraySize}\n        setIsAnimationStarted={setIsAnimationStarted}\n      />\n      <div>\n        <canvas ref={canvas} className=\"canvas\"></canvas>\n      </div>\n    </>\n  );\n\n}\n\nexport default MergeSort;","import { useEffect, useRef, useState } from 'react';\nimport { Refs } from './refs';\nimport Topbar from '../topbar';\n\nconst QuickSort = () => {\n\n\tlet canvas = useRef<HTMLCanvasElement>(null);\n\tlet [arraySize, setArraySize] = useState(() => Math.floor(window.innerWidth / 20));\n\tlet [isAnimationStarted, setIsAnimationStarted] = useState(false);\n\tlet values = useRef<Refs>({\n\t\tspeed: 100,\n\t\tid: null,\n\t\tarray: [],\n\t\tmounted: true\n\t});\n\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t\tvalues.current.mounted = false;\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tvalues.current.array = [];\n\t}, [arraySize]);\n\n\tuseEffect(() => {\n\n\t\tlet canvasElement = canvas.current!;\n\t\tlet ctx = canvasElement.getContext(\"2d\")!;\n\t\tlet label = 9;\n\t\tcanvasElement.scrollIntoView({\n\t\t\tbehavior: 'smooth'\n\t\t})\n\t\tlet dpr = devicePixelRatio > 1.5 ? devicePixelRatio : 2;\n\n\t\tcanvasElement.height = window.innerHeight * 0.8 * dpr;\n\t\tcanvasElement.width = window.innerWidth * dpr;\n\t\tctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n\n\t\tlet widthFactor = canvasElement.width / arraySize;\n\t\tlet itemWidth = (widthFactor * 3) / 4;\n\n\n\t\tfor (let i = 0; i < arraySize; i++) {\n\t\t\tvalues.current.array.push(Math.round(Math.random() * (canvasElement.height - 70) + 30));\n\n\t\t\tctx.fillStyle = \"green\";\n\t\t\tctx.fillRect(i * widthFactor + 5, canvasElement.height - values.current.array[i], itemWidth, values.current.array[i]);\n\n\t\t\tif (itemWidth > label) {\n\t\t\t\tctx.fillStyle = \"red\";\n\t\t\t\tctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n\t\t\t\tctx.fillText((values.current.array[i] / dpr).toFixed(0), i * widthFactor + 5, canvasElement.height - values.current.array[i] - 2);\n\t\t\t}\n\t\t}\n\n\t\tif (!isAnimationStarted) return;\n\t\tfunction delay() {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\tsetTimeout(res, values.current.speed);\n\t\t\t});\n\t\t}\n\n\t\tasync function swap(i: number, j: number) {\n\t\t\tlet t = values.current.array[i];\n\t\t\tvalues.current.array[i] = values.current.array[j];\n\t\t\tvalues.current.array[j] = t;\n\n\t\t\tawait delay();\n\n\t\t\tctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n\t\t\tfor (let k = 0; k < arraySize; k++) {\n\n\t\t\t\tif (itemWidth > label) {\n\t\t\t\t\tctx.fillStyle = \"red\";\n\t\t\t\t\tctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n\t\t\t\t\tctx.fillText((values.current.array[k] / dpr).toFixed(0), k * widthFactor + 2, canvasElement.height - values.current.array[k] - 2);\n\t\t\t\t}\n\n\t\t\t\tctx.fillStyle = \"green\";\n\n\t\t\t\tif (k >= i && k <= j) ctx.fillStyle = \"blue\";\n\n\t\t\t\tctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n\t\t\t}\n\t\t}\n\n\t\tasync function partition(left: number, right: number) {\n\t\t\tvar pivot = values.current.array[Math.floor((right + left) / 2)], //middle element\n\t\t\t\ti = left,\n\t\t\t\tj = right;\n\t\t\twhile (i <= j) {\n\t\t\t\twhile (values.current.array[i] < pivot) {\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\twhile (values.current.array[j] > pivot) {\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t\tif (i <= j) {\n\t\t\t\t\tawait swap(i, j); //swap two elements\n\t\t\t\t\ti++;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// requestAnimationFrame(fn);\n\t\t\treturn i;\n\t\t}\n\n\t\tasync function qs(left: number, right: number) {\n\t\t\tvar index;\n\t\t\tif (values.current.array.length > 1) {\n\t\t\t\tindex = await partition(left, right); //index returned from partition\n\t\t\t\tif (left < index - 1) {\n\t\t\t\t\t//more elements on the left side of the pivot\n\t\t\t\t\tawait qs(left, index - 1);\n\t\t\t\t}\n\t\t\t\tif (index < right) {\n\t\t\t\t\t//more elements on the right side of the pivot\n\t\t\t\t\tawait qs(index, right);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tqs(0, values.current.array.length - 1).then(() => {\n\t\t\tif (values.current.mounted)\n\t\t\t\tsetIsAnimationStarted(false);\n\t\t});\n\n\t}, [arraySize, isAnimationStarted]);\n\n\treturn (\n\t\t<>\n\t\t\t<Topbar\n\t\t\t\tisAnimationStarted={isAnimationStarted}\n\t\t\t\tvalues={values.current}\n\t\t\t\tsetArraySize={setArraySize}\n\t\t\t\tsetIsAnimationStarted={setIsAnimationStarted}\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t<canvas ref={canvas} className=\"canvas\"></canvas>\n\t\t\t</div>\n\t\t</>\n\t);\n\n}\n\nexport default QuickSort;","import { useEffect, useRef, useState } from 'react';\nimport { Refs } from './refs';\nimport Topbar from '../topbar';\n\nconst SelectionSort = () => {\n    let canvas = useRef<HTMLCanvasElement>(null);\n    let [arraySize, setArraySize] = useState(() => Math.floor(window.innerWidth / 20));\n    let [isAnimationStarted, setIsAnimationStarted] = useState(false);\n    let values = useRef<Refs>({\n        speed: 100,\n        id: null,\n        array: [],\n        mounted: true\n    });\n\n    useEffect(() => {\n        return () => {\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            values.current.mounted = false;\n        }\n    }, []);\n\n    useEffect(() => {\n        values.current.array = [];\n    }, [arraySize]);\n\n    useEffect(() => {\n\n        let canvasElement = canvas.current!;\n        let ctx = canvasElement.getContext(\"2d\")!;\n        let label = 9;\n        canvasElement.scrollIntoView({\n            behavior: 'smooth'\n        })\n        let dpr = devicePixelRatio > 1.5 ? devicePixelRatio : 2;\n\n\n        canvasElement.height = window.innerHeight * 0.8 * dpr;\n        canvasElement.width = window.innerWidth * dpr;\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n        let i = 0;\n        let j = 1;\n        let min = i;\n        let widthFactor = canvasElement.width / arraySize;\n        let itemWidth = (widthFactor * 3) / 4;\n\n\n        for (let i = 0; i < arraySize; i++) {\n            values.current.array.push(Math.round(Math.random() * (canvasElement.height - 70) + 30));\n\n            ctx.fillStyle = \"green\";\n            ctx.fillRect(i * widthFactor + 5, canvasElement.height - values.current.array[i], itemWidth, values.current.array[i]);\n\n            if (itemWidth > label) {\n                ctx.fillStyle = \"red\";\n                ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n                ctx.fillText((values.current.array[i] / dpr).toFixed(0), i * widthFactor + 5, canvasElement.height - values.current.array[i] - 2);\n            }\n        }\n\n        if (!isAnimationStarted) return;\n\n        function sort() {\n\n            ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n            if (i < arraySize - 1) {\n                if (j < arraySize && values.current.array[j] < values.current.array[min]) {\n                    min = j;\n                }\n                j++;\n                if (j >= arraySize) {\n                    let tmp = values.current.array[i];\n                    values.current.array[i] = values.current.array[min];\n                    values.current.array[min] = tmp;\n                    i++;\n                    min = i;\n                    j = i + 1;\n                }\n            }\n\n\n            for (let k = 0; k < arraySize; k++) {\n                ctx.strokeRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n\n                if (itemWidth > label) {\n                    ctx.fillStyle = \"red\";\n                    ctx.font = `${(itemWidth * 2) / 3 - 1}px Arial`;\n                    ctx.fillText((values.current.array[k] / dpr).toFixed(0), k * widthFactor + 5, canvasElement.height - values.current.array[k] - 2);\n                }\n\n\n                if (k === j) {\n                    ctx.fillStyle = \"blue\";\n                    ctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n                }\n                if (k < arraySize - 1 && k === min) {\n                    ctx.fillStyle = \"orange\";\n                    ctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n                }\n                if (k < i || i >= arraySize - 1) {\n                    ctx.fillStyle = \"green\";\n                    ctx.fillRect(k * widthFactor + 2, canvasElement.height - values.current.array[k], itemWidth, values.current.array[k]);\n                }\n            }\n\n            values.current.id = setTimeout(sort, values.current.speed);\n\n            if (i >= arraySize - 1) {\n                clearTimeout(values.current.id);\n                if (values.current.mounted)\n                    setIsAnimationStarted(false);\n            }\n        }\n\n        values.current.id = setTimeout(sort, values.current.speed);\n\n    }, [arraySize, isAnimationStarted]);\n\n    return (\n        <>\n            <Topbar\n                isAnimationStarted={isAnimationStarted}\n                values={values.current}\n                setArraySize={setArraySize}\n                setIsAnimationStarted={setIsAnimationStarted}\n            />\n            <div>\n                <canvas ref={canvas} className=\"canvas\"></canvas>\n            </div>\n        </>\n    );\n}\n\nexport default SelectionSort;","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Switch, NavLink, Route } from 'react-router-dom';\nimport './App.css';\nimport Home from './Home';\nimport BubbleSort from './sorts/BubbleSort';\nimport CocktailSort from './sorts/CocktailSort';\nimport InsertionSort from './sorts/InsertionSort';\nimport MergeSort from './sorts/MergeSort';\nimport QuickSort from './sorts/QuickSort';\nimport SelectionSort from './sorts/SelectionSort';\n\nfunction App() {\n  useEffect(() => {\n    let id: NodeJS.Timeout;\n    let orientationChange = () => window.location.reload();\n    if (window.navigator.maxTouchPoints > 0) {\n      window.addEventListener(\"orientationchange\", () => {\n        clearTimeout(id);\n        id = setTimeout(orientationChange, 100);\n      });\n      return () => window.removeEventListener(\"orientationchange\", orientationChange);\n    } else {\n      let orientationChange = () => window.location.reload();\n      window.addEventListener(\"resize\", () => {\n        clearTimeout(id);\n        id = setTimeout(orientationChange, 100);\n      });\n      return () => window.removeEventListener(\"resize\", orientationChange);\n    }\n  });\n  return (\n    <Router>\n      <nav id=\"nav\" className=\"nav\">\n        <NavLink exact to=\"/\"\n          activeClassName=\"activeNavlink\"\n          className=\"navlink\"\n        >\n          Home\n          </NavLink>\n        <NavLink\n          to=\"/bubblesort\"\n          activeClassName=\"activeNavlink\"\n          className=\"navlink\"\n        >\n          BubbleSort\n          </NavLink>\n        <NavLink\n          to=\"/insertionsort\"\n          activeClassName=\"activeNavlink\"\n          className=\"navlink\"\n        >\n          InsertionSort\n          </NavLink>\n        <NavLink\n          to=\"/selectionsort\"\n          activeClassName=\"activeNavlink\"\n          className=\"navlink\"\n        >\n          SelectionSort\n          </NavLink>\n        <NavLink\n          to=\"/cocktailsort\"\n          activeClassName=\"activeNavlink\"\n          className=\"navlink\"\n        >\n          CocktailSort\n          </NavLink>\n        <NavLink\n          to=\"/quicksort\"\n          activeClassName=\"activeNavlink\"\n          className=\"navlink\"\n        >\n          QuickSort\n          </NavLink>\n        <NavLink\n          to=\"/mergesort\"\n          activeClassName=\"activeNavlink\"\n          className=\"navlink\"\n        >\n          MergeSort\n          </NavLink>\n      </nav>\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route path=\"/bubblesort\" component={BubbleSort}></Route>\n        <Route path=\"/insertionsort\" component={InsertionSort}></Route>\n        <Route path=\"/selectionsort\" component={SelectionSort}></Route>\n        <Route path=\"/cocktailsort\" component={CocktailSort}></Route>\n        <Route path=\"/quicksort\" component={QuickSort}></Route>\n        <Route path=\"/mergesort\" component={MergeSort}></Route>\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}